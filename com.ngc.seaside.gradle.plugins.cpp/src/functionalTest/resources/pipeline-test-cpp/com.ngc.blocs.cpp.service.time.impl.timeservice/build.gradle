/**
 * UNCLASSIFIED
 *
 * Copyright 2020 Northrop Grumman Systems Corporation
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of
 * this software and associated documentation files (the "Software"), to deal in
 * the Software without restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 * Software, and to permit persons to whom the Software is furnished to do so,
 * subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
plugins {
    id 'com.ngc.seaside.cpp.parent'
    id 'com.ngc.seaside.cpp.coverage'
}

dependencies {
    compile project(path: ':service.api', configuration: 'distribution')
    compile project(path: ':service.utilities', configuration: 'distribution')
    testCompile "com.google.test:gtest:$gTestVersion@zip"
    testCompile "com.google.test:gmock:$gMockVersion@zip"
}

building {
    api('service.api')
    statically('service.utilities')
    statically('gtest')
    statically('gmock')
}

model {
    binaries {
        all {
            // Define toolchain-specific compiler and linker options
            if (toolChain in Gcc) {
                cppCompiler.args "-fPIC", "-std=gnu++11", "-pthread", "-Wall", "-Werror", "-fno-rtti", "-fprofile-arcs", "-ftest-coverage"
                linker.args "-pthread", "-lgcov", "--coverage"
            }
        }
    }

    testSuites {
        mainTest(GoogleTestTestSuiteSpec) {
            testing $.components.main
            sources {
                cpp.source.srcDir 'src/test/cpp'
            }
        }
    }
}
